var 
  // поезда
  TrainCount: integer;
  tArrive, tDeparture, Stops, Clocks, ClipHead, ClipTail: array[0..1] of extended;
  ShowClock, DoClipHead, DoClipTail: array[0..1] of Boolean;

  // рельсы
  NodeCount: integer;
  xs, xs2, ys, ys2, zs, zs2: array[0..14] of extended; 
  PathLength, PathLength2: array[0..14] of extended;

{$I ToolsMonorail.pms}

procedure InitPath();
var i, j: integer;
begin
  for i := 0 to TrainCount - 1 do begin
    ShowClock[i] := False;
    DoClipHead[i] := False;
    DoClipTail[i] := False;
  end;

  NodeCount := 15;
  xs[0] := 412;  ys[0] := 283;  zs[0] := 107;
  xs[1] := 1594; ys[1] := ys[0]; zs[1] := zs[0];
  xs[2] := 1633; ys[2] := 282; zs[2] := zs[0];
  xs[3] := 1673; ys[3] := 279; zs[3] := zs[0];
  xs[4] := 1711; ys[4] := 274; zs[4] := zs[0];
  xs[5] := 1750; ys[5] := 267; zs[5] := zs[0];
  xs[6] := 1788; ys[6] := 258; zs[6] := zs[0];
  xs[7] := 1820; ys[7] := 248; zs[7] := zs[0];
  xs[8] := 1854; ys[8] := 239; zs[8] := zs[0];
  xs[9] := 1889; ys[9] := 232; zs[9] := zs[0];
  xs[10] := 1925; ys[10] := 226; zs[10] := zs[0];
  xs[11] := 1964; ys[11] := 220; zs[11] := zs[0];
  xs[12] := 2004; ys[12] := 218; zs[12] := zs[0];
  xs[13] := 2044; ys[13] := 218; zs[13] := zs[0];
  xs[14] := 2715; ys[14] := 218; zs[14] := zs[0];
  Stops[0] := 0.17;
  Clocks[0] := 0;

  xs2[0] := 1943; ys2[0] := 54;    zs2[0] := zs[0];
  xs2[1] := 762; ys2[1] := 54; zs2[1] := zs[0];
  xs2[2] := 723; ys2[2] := 55;  zs2[2] := zs[0];
  xs2[3] := 684; ys2[3] := 58;  zs2[3] := zs[0];
  xs2[4] := 645; ys2[4] := 64;  zs2[4] := zs[0];
  xs2[5] := 607; ys2[5] := 71;  zs2[5] := zs[0];
  xs2[6] := 569; ys2[6] := 80;  zs2[6] := zs[0];
  xs2[7] := 537; ys2[7] := 89;  zs2[7] := zs[0];
  xs2[8] := 503; ys2[8] := 98;  zs2[8] := zs[0];
  xs2[9] := 468; ys2[9] := 106; zs2[9] := zs[0];
  xs2[10] := 431; ys2[10] := 112; zs2[10] := zs[0];
  xs2[11] := 393; ys2[11] := 117; zs2[11] := zs[0];
  xs2[12] := 353; ys2[12] := 120; zs2[12] := zs[0];
  xs2[13] := 312; ys2[13] := 120; zs2[13] := zs[0];
  xs2[14] := -249; ys2[14] := 120; zs2[14] := zs[0];
  Stops[1] := 0.17;
  Clocks[1] := 0;

  // рассчитываем длину трассы
  for j := 0 to TrainCount - 1 do begin
    PathLength[0 + j * NodeCount] := 0;
    for i := 1 to NodeCount - 1 do
      PathLength[i + j * NodeCount] := PathLength[i - 1 + j * NodeCount] + sqrt((Xs[i + j * NodeCount] - Xs[i - 1 + j * NodeCount]) ^ 2 + (Ys[i + j * NodeCount] - Ys[i - 1 + j * NodeCount]) ^ 2 + (Zs[i + j * NodeCount] - Zs[i - 1 + j * NodeCount]) ^ 2);
  end;

  // пересчитаем точки остановок, часов и обрезки
  for i := 0 to TrainCount - 1 do begin
    Stops[i] := Segment2Path(i, Stops[i]);
    Clocks[i] := Segment2Path(i, Clocks[i]);
    ClipHead[i] := Segment2Path(i, ClipHead[i]);
    ClipTail[i] := Segment2Path(i, ClipTail[i]);
  end;
end; // InitPath

procedure Init();
begin
  TrainCount := 2; // количество часов и поездов
  VagonCount := 6;
  StopTime := 10;        // остановка - 10 секунд

  InitPath;
  InitClock;
  InitTrain;

  // удаляем статичные ступеньки  
  HideObject('SUp');
  HideObject('SDown');
end; // Init

var StartStatus: integer;
    i: integer;
    Hour: word;
begin
  if StartStatus = 0 then
    Init();

  t := Time * 86400;
  Hour := Trunc(t / 3600);
  Period := GetPeriod(Hour);

  DrawEscalatorStairs(Hour, t);

  if StartStatus = 0 then
    GetInitPositions
  else
    GetPositionAbovePeriod;


  // рисуем поезда
  DrawTrains(True, 1);
//  DrawPath(14);

  StartStatus := 1;
end.