var 
  // поезда
  TrainCount: integer;
  tArrive, tDeparture, Stops, Clocks, ClipHead, ClipTail: array[0..1] of extended;
  ShowClock, DoClipHead, DoClipTail: array[0..1] of Boolean;
  LeftDoor: array[0..1] of Boolean;

  // рельсы
  NodeCount: integer;
  xs, xs2, ys, ys2, zs, zs2: array[0..10] of extended; 
  PathLength, PathLength2: array[0..10] of extended;

{$I ToolsTrain.pms}

procedure InitPath();
var i, j: integer;
begin
  for i := 0 to TrainCount - 1 do begin
    ShowClock[i] := False;
    DoClipHead[i] := False;
    DoClipTail[i] := False;
  end;

  NodeCount := 11;
  xs[0] := -3785; ys[0] := -161; zs[0] := 40;
  xs[1] := -3426; ys[1] := -98; zs[1] := zs[0];
  xs[2] := -3242; ys[2] := -67; zs[2] := zs[0];
  xs[3] := -3056; ys[3] := -41; zs[3] := zs[0];
  xs[4] := -2869; ys[4] := -18; zs[4] := zs[0];
  xs[5] := -2683; ys[5] := 0; zs[5] := zs[0];
  xs[6] := -2495; ys[6] := 14; zs[6] := zs[0];
  xs[7] := -2309; ys[7] := 25; zs[7] := zs[0];
  xs[8] := -2122; ys[8] := 31; zs[8] := zs[0];
  xs[9] := -1934; ys[9] := 33; zs[9] := zs[0];
  xs[10] := 3500; ys[10] := 33; zs[10] := zs[0];

  Stops[0] := 6;

  xs2[0] := 3500;  ys2[0] := -76; zs2[0] := zs[0];
  xs2[1] := -1924; ys2[1] := -76; zs2[1] := zs[0];
  xs2[2] := -2112; ys2[2] := -78; zs2[2] := zs2[0];
  xs2[3] := -2300; ys2[3] := -84; zs2[3] := zs2[0];
  xs2[4] := -2486; ys2[4] := -94; zs2[4] := zs2[0];
  xs2[5] := -2673; ys2[5] := -108; zs2[5] := zs2[0];
  xs2[6] := -2860; ys2[6] := -127; zs2[6] := zs2[0];
  xs2[7] := -3046; ys2[7] := -149; zs2[7] := zs2[0];
  xs2[8] := -3232; ys2[8] := -176; zs2[8] := zs2[0];
  xs2[9] := -3416; ys2[9] := -206; zs2[9] := zs2[0];
  xs2[10] := -3767; ys2[10] := -268; zs2[10] := zs2[0];
  Stops[1] := 0.3;

  // рассчитываем длину трассы
  for j := 0 to TrainCount - 1 do begin
    PathLength[0 + j * NodeCount] := 0;
    for i := 1 to NodeCount - 1 do
      PathLength[i + j * NodeCount] := PathLength[i - 1 + j * NodeCount] + sqrt((Xs[i + j * NodeCount] - Xs[i - 1 + j * NodeCount]) ^ 2 + (Ys[i + j * NodeCount] - Ys[i - 1 + j * NodeCount]) ^ 2 + (Zs[i + j * NodeCount] - Zs[i - 1 + j * NodeCount]) ^ 2);
  end;

  // пересчитаем точки остановок, часов и обрезки
  for i := 0 to TrainCount - 1 do begin
    Stops[i] := Segment2Path(i, Stops[i]);
    Clocks[i] := Segment2Path(i, Clocks[i]);
    ClipHead[i] := Segment2Path(i, ClipHead[i]);
    ClipTail[i] := Segment2Path(i, ClipTail[i]);
  end;
end; // InitPath

procedure Init();
begin
  TrainCount := 2; // количество часов и поездов
  VagonCount := 4;
  StopTime := 20;        // остановка - 20 секунд

  InitPath;
//  InitClock;
  InitTrain;

  // удаляем статичные ступеньки  
  HideObject('SUp');
  HideObject('SDown');
end; // Init

var StartStatus: integer;
    i: integer;
    Hour: word;
begin
  if StartStatus = 0 then
    Init();

  t := Time * 86400;
  Hour := Trunc(t / 3600);
  Period := GetPeriod(Hour);

  if StartStatus = 0 then
    GetInitPositions
  else 
    GetPositionAbovePeriod;

  // рисуем поезда
  DrawTrains(False, 1);
//  DrawPath(22);

  StartStatus := 1;
end.
