var 
  // поезда
  TrainCount: integer;
  tArrive, tDeparture, Stops, Clocks, ClipHead, ClipTail: array[0..1] of extended;
  ShowClock, DoClipHead, DoClipTail: array[0..1] of Boolean;

  // рельсы
  NodeCount: integer;
  xs, xs2, ys, ys2, zs, zs2: array[0..26] of extended; 
  PathLength, PathLength2: array[0..26] of extended;

{$I ToolsEzh.pms}

procedure InitPath();
var i, j: integer;
begin
  for i := 0 to TrainCount - 1 do begin
    ShowClock[i] := True;
    DoClipHead[i] := True;
    DoClipTail[i] := True;
  end;

  NodeCount := 27;
  xs[0]  := -3982; ys[0]  := 117;    zs[0] := 202;
  xs[1]  := -3870; ys[1]  := 82;     zs[1] := 201;
  xs[2]  := -3755; ys[2]  := 49;     zs[2] := 201;
  xs[3]  := -3641; ys[3]  := 18;     zs[3] := 201;
  xs[4]  := -3523; ys[4]  := -11;    zs[4] := 204;
  xs[5]  := -3406; ys[5]  := -38;    zs[5] := 204;
  xs[6]  := -3289; ys[6]  := -63;    zs[6] := 202;
  xs[7]  := -3172; ys[7]  := -85;    zs[7] := 199;
  xs[8]  := -3055; ys[8]  := -105;   zs[8] := 194;
  xs[9]  := -2939; ys[9]  := -123;   zs[9] := 187;
  xs[10] := -2824; ys[10] := -139;   zs[10] := 179;
  xs[11] := -2707; ys[11] := -153;   zs[11] := 169;
  xs[12] := -2592; ys[12] := -164;   zs[12] := 157;
  xs[13] := -2477; ys[13] := -173;   zs[13] := 144;
  xs[14] := -2362; ys[14] := -180;   zs[14] := 129;
  xs[15] := -2247; ys[15] := -185;   zs[15] := 113;
  xs[16] := -2129; ys[16] := -188;   zs[16] := 98;
  xs[17] := -2011; ys[17] := ys[16]; zs[17] := 84;
  xs[18] := -1893; ys[18] := ys[16]; zs[18] := 71;
  xs[19] := -1775; ys[19] := ys[16]; zs[19] := 58;
  xs[20] := -1656; ys[20] := ys[16]; zs[20] := 48;
  xs[21] := -1538; ys[21] := ys[16]; zs[21] := 38;
  xs[22] := -1419; ys[22] := ys[16]; zs[22] := 30;
  xs[23] := -1301; ys[23] := ys[16]; zs[23] := 22;
  xs[24] := -1182; ys[24] := ys[16]; zs[24] := 16;
  xs[25] := -590;  ys[25] := ys[16]; zs[25] := 2;
  xs[26] := 1735;  ys[26] := ys[16]; zs[26] := 2;
  Stops[0] := 25.046;
  Clocks[0] := 25.0;
  DoClipHead[0] := False;
  ClipTail[0] := 25.88;

  xs2[0]  := 1735; ys2[0]  := -606; zs2[0] := 2;
  xs2[1]  := -590; ys2[1]  := -605; zs2[1] := 2;
  xs2[2]  := -1181; ys2[2]  := -591; zs2[2] := 16;
  xs2[3]  := -1299; ys2[3]  := -584; zs2[3] := 22;
  xs2[4]  := -1418; ys2[4]  := -576; zs2[4] := 30;
  xs2[5]  := -1536; ys2[5]  := -567; zs2[5] := 37;
  xs2[6]  := -1655; ys2[6]  := -557; zs2[6] := 48;
  xs2[7]  := -1773; ys2[7]  := -546; zs2[7] := 59;
  xs2[8]  := -1891; ys2[8]  := -533; zs2[8] := 70;
  xs2[9]  := -2008; ys2[9]  := -520; zs2[9] := 83;
  xs2[10] := -2126; ys2[10] := -505; zs2[10] := 98;
  xs2[11] := -2242; ys2[11] := -489; zs2[11] := 113;
  xs2[12] := -2358; ys2[12] := -472; zs2[12] := 129;
  xs2[13] := -2470; ys2[13] := -454; zs2[13] := 143;
  xs2[14] := -2585; ys2[14] := -434; zs2[14] := 157;
  xs2[15] := -2699; ys2[15] := -413; zs2[15] := 168;
  xs2[16] := -2813; ys2[16] := -391; zs2[16] := 178;
  xs2[17] := -2928; ys2[17] := -368; zs2[17] := 187;
  xs2[18] := -3043; ys2[18] := -344; zs2[18] := 193;
  xs2[19] := -3159; ys2[19] := -318; zs2[19] := 199;
  xs2[20] := -3275; ys2[20] := -292; zs2[20] := 202;
  xs2[21] := -3391; ys2[21] := -264; zs2[21] := 204;
  xs2[22] := -3507; ys2[22] := -235; zs2[22] := 204;
  xs2[23] := -3624; ys2[23] := -205; zs2[23] := 202;
  xs2[24] := -3739; ys2[24] := -174; zs2[24] := 201;
  xs2[25] := -3854; ys2[25] := -141; zs2[25] := 201;
  xs2[26] := -3967; ys2[26] := -108; zs2[26] := 201;
                   
  Stops[1] := 0.298;
  Clocks[1] := 0.2526;
  ClipHead[1] := 0.12;
  DoClipTail[1] := False;

  // рассчитываем длину трассы
  for j := 0 to TrainCount - 1 do begin
    PathLength[0 + j * NodeCount] := 0;
    for i := 1 to NodeCount - 1 do
      PathLength[i + j * NodeCount] := PathLength[i - 1 + j * NodeCount] + sqrt((Xs[i + j * NodeCount] - Xs[i - 1 + j * NodeCount]) ^ 2 + (Ys[i + j * NodeCount] - Ys[i - 1 + j * NodeCount]) ^ 2 + (Zs[i + j * NodeCount] - Zs[i - 1 + j * NodeCount]) ^ 2);
  end;

  // пересчитаем точки остановок, часов и обрезки
  for i := 0 to TrainCount - 1 do begin
    Stops[i] := Segment2Path(i, Stops[i]);
    Clocks[i] := Segment2Path(i, Clocks[i]);
    ClipHead[i] := Segment2Path(i, ClipHead[i]);
    ClipTail[i] := Segment2Path(i, ClipTail[i]);
  end;
end; // InitPath

procedure Init();
begin
  TrainCount := 2; // количество часов и поездов
  VagonCount := 3;
  StopTime := 8;        // остановка - 8 секунд

  InitPath;
  InitClock;
  InitTrain;

  // удаляем статичные ступеньки  
  HideObject('SUp');
  HideObject('SDown');
end; // Init

var StartStatus: integer;
    i: integer;
    Hour: word;
begin
  if StartStatus = 0 then begin
    Init();
    MinTime := -10.5;
    MaxTime := 27;
  end;

  t := Time * 86400;
  Hour := Trunc(t / 3600);
  Period := GetPeriod(Hour);


  DrawEscalatorStairs(Hour, t);

  if StartStatus = 0 then
    GetInitPositions
  else
    GetPositionAbovePeriod;


  // рисуем поезда
  DrawTrains(True, 1);
//  DrawPath(24);

  StartStatus := 1;
end.