var 
  // поезда
  TrainCount: integer;
  tArrive, tDeparture, Stops, Clocks, ClipHead, ClipTail, Periods: array[0..2] of extended;
  ShowClock, DoClipHead, DoClipTail: array[0..2] of Boolean;

  // рельсы
  NodeCount: integer;
  xs, xs2, xs3, ys, ys2, ys3, zs, zs2, zs3: array[0..17] of extended; 
  PathLength, PathLength2, PathLength3: array[0..17] of extended;

{$I ToolsTrain.pms}

procedure InitPath();
var i, j: integer;
begin
  for i := 0 to TrainCount - 1 do begin
    ShowClock[i] := False;
    DoClipHead[i] := False;
    DoClipTail[i] := False;
  end;

  NodeCount := 18;
  xs[0]  := 1705;  ys[0]  := 129;  zs[0]  := 12;
  xs[1]  := 1521;  ys[1]  := 95;   zs[1]  := zs[0];
  xs[2]  := 1339;  ys[2]  := 63;   zs[2]  := zs[0];
  xs[3]  := 1157;  ys[3]  := 33;   zs[3]  := zs[0];
  xs[4]  := 973;   ys[4]  := 5;    zs[4]  := zs[0];
  xs[5]  := 790;   ys[5]  := -20;  zs[5]  := zs[0];
  xs[6]  := 606;   ys[6]  := -44;  zs[6]  := zs[0];
  xs[7]  := 423;   ys[7]  := -65;  zs[7]  := zs[0];
  xs[8]  := 239;   ys[8]  := -84;  zs[8]  := zs[0];
  xs[9]  := 53;    ys[9]  := -102; zs[9]  := zs[0];
  xs[10] := -131;  ys[10] := -116; zs[10] := zs[0];
  xs[11] := -316;  ys[11] := -130; zs[11] := zs[0];
  xs[12] := -501;  ys[12] := -141; zs[12] := zs[0];
  xs[13] := -686;  ys[13] := -149; zs[13] := zs[0];
  xs[14] := -871;  ys[14] := -155; zs[14] := zs[0];
  xs[15] := -1057; ys[15] := -161; zs[15] := zs[0];
  xs[16] := -1242; ys[16] := -163; zs[16] := zs[0];
  xs[17] := -4944; ys[17] := -163; zs[17] := zs[0];
  Stops[0] := 4;
  Clocks[0] := 0;

  xs2[0]  := -4944; ys2[0]  := -43; zs2[ 0] := zs[0];
  xs2[1]  := -1241; ys2[1]  := -43; zs2[1]  := zs[0];
  xs2[2]  := -1056; ys2[2]  := -41; zs2[2]  := zs[0];
  xs2[3]  := -871;  ys2[3]  := -36; zs2[3]  := zs[0];
  xs2[4]  := -686;  ys2[4]  := -30; zs2[4]  := zs[0];
  xs2[5]  := -500;  ys2[5]  := -21; zs2[5]  := zs[0];
  xs2[6]  := -317;  ys2[6]  := -10; zs2[6]  := zs[0];
  xs2[7]  := -131;  ys2[7]  := 3;   zs2[7]  := zs[0];
  xs2[8]  := 54;    ys2[8]  := 18;  zs2[8]  := zs[0];
  xs2[9]  := 238;   ys2[9]  := 35;  zs2[9]  := zs[0];
  xs2[10] := 423;   ys2[10] := 55;  zs2[10] := zs[0];
  xs2[11] := 606;   ys2[11] := 76;  zs2[11] := zs[0];
  xs2[12] := 790;   ys2[12] := 100; zs2[12] := zs[0];
  xs2[13] := 974;   ys2[13] := 125; zs2[13] := zs[0];
  xs2[14] := 1157;  ys2[14] := 153; zs2[14] := zs[0];
  xs2[15] := 1341;  ys2[15] := 183; zs2[15] := zs[0];
  xs2[16] := 1523;  ys2[16] := 215; zs2[16] := zs[0];
  xs2[17] := 1703;  ys2[17] := 249; zs2[17] := zs[0];
  Stops[1] := 0.6;
  Clocks[1] := 0;

  xs3[0]  := -4943; ys3[0]  := 304;    zs3[ 0] := zs[0];
  xs3[1]  := -1241; ys3[1]  := 304; zs3[1]  := zs[0];
  xs3[2]  := -1056; ys3[2]  := 307; zs3[2]  := zs[0];
  xs3[3]  := -871;  ys3[3]  := 312; zs3[3]  := zs[0];
  xs3[4]  := -685; ys3[4]  := 318; zs3[4]  := zs[0];
  xs3[5]  := -500; ys3[5]  := 327; zs3[5]  := zs[0];
  xs3[6]  := -316; ys3[6]  := 338; zs3[6]  := zs[0];
  xs3[7]  := -130; ys3[7]  := 351; zs3[7]  := zs[0];
  xs3[8]  := 54; ys3[8]  := 366; zs3[8]  := zs[0];
  xs3[9]  := 238; ys3[9]  := 383; zs3[9]  := zs[0];
  xs3[10] := 424; ys3[10] := 403; zs3[10] := zs[0];
  xs3[11] := 606; ys3[11] := 424; zs3[11] := zs[0];
  xs3[12] := 790; ys3[12] := 447; zs3[12] := zs[0];
  xs3[13] := 973; ys3[13] := 473; zs3[13] := zs[0];
  xs3[14] := 1155; ys3[14] := 500; zs3[14] := zs[0];
  xs3[15] := 1340; ys3[15] := 531; zs3[15] := zs[0];
  xs3[16] := 1522; ys3[16] := 562; zs3[16] := zs[0];
  xs3[17] := 1894; ys3[17] := 633; zs3[17] := zs[0];
  Stops[2] := 0.6;
  Clocks[2] := 0;

  // рассчитываем длину трассы
  for j := 0 to TrainCount - 1 do begin
    PathLength[0 + j * NodeCount] := 0;
    for i := 1 to NodeCount - 1 do
      PathLength[i + j * NodeCount] := PathLength[i - 1 + j * NodeCount] + sqrt((Xs[i + j * NodeCount] - Xs[i - 1 + j * NodeCount]) ^ 2 + (Ys[i + j * NodeCount] - Ys[i - 1 + j * NodeCount]) ^ 2 + (Zs[i + j * NodeCount] - Zs[i - 1 + j * NodeCount]) ^ 2);
  end;

  // пересчитаем точки остановок, часов и обрезки
  for i := 0 to TrainCount - 1 do begin
    Stops[i] := Segment2Path(i, Stops[i]);
    Clocks[i] := Segment2Path(i, Clocks[i]);
    ClipHead[i] := Segment2Path(i, ClipHead[i]);
    ClipTail[i] := Segment2Path(i, ClipTail[i]);
  end;
end; // InitPath

procedure Init();
begin
  TrainCount := 3; // количество часов и поездов
  VagonCount := 4;
  StopTime := 20;        // остановка - 20 секунд

  InitPath;
//  InitClock;
  InitTrain;

  // удаляем статичные ступеньки  
  HideObject('SUp');
  HideObject('SDown');
end; // Init

var StartStatus: integer;
    i: integer;
    Hour: word;
begin
  if StartStatus = 0 then
    Init();

  t := Time * 86400;
  Hour := Trunc(t / 3600);
  Period := GetPeriod(Hour);
  Periods[0] := Period;
  Periods[1] := Period * 4 / 3;
  Periods[2] := Period * 4;

//  DrawEscalatorStairs(Hour, t);

  if StartStatus = 0 then
    for i := 0 to TrainCount - 1 do begin
      tDeparture[i] := Round(t - Periods[i] * Random(1));
      tArrive[i] := tDeparture[i] - StopTime - 3;
    end
  else
    for i := 0 to TrainCount - 1 do
      if t > tArrive[i] + StopTime / 2 + Periods[i] / 2 then
        tArrive[i] := Round(tArrive[i] + Periods[i] + (Random(1) * 2 - 1) * Periods[i] * 0.25)
      else if t < tArrive[i] - Periods[i] then
        tArrive[i] := tArrive[i] - 86400;

  // рисуем поезда
  DrawTrain(0, False, 1);
  DrawTrain(1, False, 1);
  DrawTrain(2, True, 1);
//  DrawPath(24);

  StartStatus := 1;
end.