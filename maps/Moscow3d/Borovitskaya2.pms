var 
  // поезда
  TrainCount: integer;
  tArrive, tDeparture, Stops, Clocks, ClipHead, ClipTail: array[0..1] of extended;
  ShowClock, DoClipHead, DoClipTail: array[0..1] of Boolean;

  // рельсы
  NodeCount: integer;
  xs, xs2, ys, ys2, zs, zs2: array[0..8] of extended; 
  PathLength, PathLength2: array[0..8] of extended;

{$I ToolsRusich.pms}

procedure InitPath();
var i, j: integer;
begin
  for i := 0 to TrainCount - 1 do begin
    ShowClock[i] := True;
    DoClipHead[i] := True;
    DoClipTail[i] := True;
  end;

  NodeCount := 9;
  xs[0] := -2661; ys[0] := 2012;   zs[0] := 133;
  xs[1] := -2076; ys[1] := 1974;   zs[1] := zs[0];
  xs[2] := -1638; ys[2] := 1944.3; zs[2] := zs[0];
  xs[3] := -1374; ys[3] := 1917;   zs[3] := zs[0];
  xs[4] := -1111; ys[4] := 1877.5; zs[4] := zs[0];
  xs[5] := -850;  ys[5] := 1825;   zs[5] := zs[0];
  xs[6] := -591;  ys[6] := 1759.5; zs[6] := zs[0];
  xs[7] := -336;  ys[7] := 1682.5; zs[7] := zs[0];
  xs[8] := 220;   ys[8] := 1500;   zs[8] := zs[0];
  Stops[0] := 1.4;
  Clocks[0] := 1.002;
  ClipHead[0] := 0.5;
  doClipTail[0] := False;
//  ClipTail[0] := 7.5;

  xs2[0] := -2671; ys2[0] := 1856; zs2[0] := zs[0];
  xs2[1] := -2084; ys2[1] := 1818;   zs2[1] := zs[0];
  xs2[2] := -1651; ys2[2] := 1789;   zs2[2] := zs[0];
  xs2[3] := -1393; ys2[3] := 1762.3; zs2[3] := zs[0];
  xs2[4] := -1138; ys2[4] := 1723.7; zs2[4] := zs[0];
  xs2[5] := -884;  ys2[5] := 1672.5; zs2[5] := zs[0];
  xs2[6] := -633;  ys2[6] := 1609.3; zs2[6] := zs[0];
  xs2[7] := -386;  ys2[7] := 1534;   zs2[7] := zs[0];
  xs2[8] := 172;   ys2[8] := 1351;   zs2[8] := zs[0];
  Stops[1] := 1.4;
  Clocks[1] := 0.999;
  ClipHead[1] := 0.5;
  doClipTail[1] := False;
//  ClipTail[1] := 7.5;

  // рассчитываем длину трассы
  for j := 0 to TrainCount - 1 do begin
    PathLength[0 + j * NodeCount] := 0;
    for i := 1 to NodeCount - 1 do
      PathLength[i + j * NodeCount] := PathLength[i - 1 + j * NodeCount] + sqrt((Xs[i + j * NodeCount] - Xs[i - 1 + j * NodeCount]) ^ 2 + (Ys[i + j * NodeCount] - Ys[i - 1 + j * NodeCount]) ^ 2 + (Zs[i + j * NodeCount] - Zs[i - 1 + j * NodeCount]) ^ 2);
  end;

  // пересчитаем точки остановок, часов и обрезки
  for i := 0 to TrainCount - 1 do begin
    Stops[i] := Segment2Path(i, Stops[i]);
    Clocks[i] := Segment2Path(i, Clocks[i]);
    ClipHead[i] := Segment2Path(i, ClipHead[i]);
    ClipTail[i] := Segment2Path(i, ClipTail[i]);
  end;
end; // InitPath

procedure Init();
begin
  TrainCount := 2; // количество часов и поездов
  VagonCount := 4;
  StopTime := 10;        // остановка - 10 секунд

  InitPath;
  InitClock;
  InitTrain;

  // удаляем статичные ступеньки  
  HideObject('SUp');
  HideObject('SDown');
end; // Init

var StartStatus: integer;
    i: integer;
    Hour: word;
begin
  if StartStatus = 0 then
    Init();

  t := Time * 86400;
  Hour := Trunc(t / 3600);
  Period := GetPeriod(Hour);

//  DrawEscalatorStairs(Hour, t);

  if StartStatus = 0 then
    GetInitPositions
  else
    GetPositionAbovePeriod;


  // рисуем поезда
  DrawTrain(0, False, 2); //2
  DrawTrain(1, True, 2); //2
//  DrawPath(24);

  StartStatus := 1;
end.